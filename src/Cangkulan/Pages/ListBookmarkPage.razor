@page "/list-bookmark"
@layout AdminLayout
@inject IJSRuntime IJS
@inject NavigationManager NavMgr
@inject IToastService toastService

@inject UserProfileService UserSvc
@inject BookmarkedJobService BookmarkedJobSvc
@inject BookmarkedFreelancerService BookmarkedFreelancerSvc

<div class="dashboard-content-inner">

	<!-- Dashboard Headline -->
	<div class="dashboard-headline">
		<h3>Bookmarks</h3>

		<!-- Breadcrumbs -->
		<nav id="breadcrumbs" class="dark">
			<ul>
				<li><a href="#">Home</a></li>
				<li><a href="#">Dashboard</a></li>
				<li>Bookmarks</li>
			</ul>
		</nav>
	</div>

	<!-- Row -->
	<div class="row">

		<!-- Dashboard Box -->
		<div class="col-xl-12">
			<div class="dashboard-box margin-top-0">

				<!-- Headline -->
				<div class="headline">
					<h3><i class="icon-material-outline-business-center"></i> Bookmarked Jobs</h3>
				</div>

				<div class="content">
					<ul class="dashboard-box-list">
						@if (selUser?.BookmarkedJobs != null)
						{
							<Virtualize Items="@selUser.BookmarkedJobs" Context="item">
							<li @key="item.Id">
								<!-- Job Listing -->
								<div class="job-listing">

									<!-- Job Listing Details -->
									<div class="job-listing-details">

										<!-- Logo -->
										<a href="/job-detail/@(item.Id)" class="job-listing-company-logo">
												<img src="images/company-logo-02.png" alt="">
										</a>

										<!-- Details -->
										<div class="job-listing-description">
											<h3 class="job-listing-title"><a href="#">@item.Job.JobTitle</a></h3>

											<!-- Job Listing Footer -->
											<div class="job-listing-footer">
												<ul>
													<li><i class="icon-material-outline-business"></i> @item.Job.JobCategory</li>
													<li><i class="icon-material-outline-location-on"></i> @item.Job.Location</li>
													<li><i class="icon-material-outline-business-center"></i> @item.Job.JobType</li>
													<li><i class="icon-material-outline-access-time"></i> @TimeHelpers.TimeAgo(item.Job.CreatedDate)</li>
												</ul>
											</div>
										</div>
									</div>
								</div>
								<!-- Buttons -->
								<div class="buttons-to-right">
									<a href="#" @onclick:preventDefault @onclick="()=>RemoveJob(item)" class="button red ripple-effect ico" title="Remove" data-tippy-placement="left"><i class="icon-feather-trash-2"></i></a>
								</div>
							</li>
							</Virtualize>
						}


					</ul>
				</div>
			</div>
		</div>

		<!-- Dashboard Box -->
		<div class="col-xl-12">
			<div class="dashboard-box">

				<!-- Headline -->
				<div class="headline">
					<h3><i class="icon-material-outline-face"></i> Bookmarked Freelancers</h3>
				</div>

				<div class="content">
					<ul class="dashboard-box-list">
						@if (selUser?.BookmarkedFreelancers != null)
						{
							<Virtualize Items="@selUser.BookmarkedFreelancers" Context="item">
								<li @key="item.Id">
								
									<!-- Overview -->
									<div class="freelancer-overview">
										<div class="freelancer-overview-inner">

											<!-- Avatar -->
											<div class="freelancer-avatar">
												<div class="verified-badge"></div>
												<a href="#"><img src="@(string.IsNullOrEmpty(item.FreelancerUser.PicUrl)?"images/user-avatar-big-02.jpg":item.FreelancerUser.PicUrl)" alt=""></a>
											</div>

											<!-- Name -->
											<div class="freelancer-name">
												<h4><a href="#">@item.FreelancerUser.FullName <img class="flag" src="images/flags/de.svg" alt="" title="Germany" data-tippy-placement="top"></a></h4>
												<span>@item.FreelancerUser.TagLine</span>
												<!-- Rating -->
												<div class="freelancer-rating">
													<div class="star-rating" data-rating="@item.FreelancerUser.Rating"></div>
												</div>
											</div>
										</div>
									</div>

									<!-- Buttons -->
									<div class="buttons-to-right">
										<a href="#" @onclick:preventDefault @onclick="()=>RemoveFreelancer(item)" class="button red ripple-effect ico" title="Remove" data-tippy-placement="left"><i class="icon-feather-trash-2"></i></a>
									</div>
								</li>
							</Virtualize>
						}
						
						
					</ul>
				</div>
			</div>
		</div>

	</div>
	<!-- Row / End -->
	<!-- Footer -->
	<div class="dashboard-footer-spacer"></div>
	<div class="small-footer margin-top-15">
		<div class="small-footer-copyrights">
			© 2019 <strong>Hireo</strong>. All Rights Reserved.
		</div>
		<ul class="footer-social-links">
			<li>
				<a href="#" title="Facebook" data-tippy-placement="top">
					<i class="icon-brand-facebook-f"></i>
				</a>
			</li>
			<li>
				<a href="#" title="Twitter" data-tippy-placement="top">
					<i class="icon-brand-twitter"></i>
				</a>
			</li>
			<li>
				<a href="#" title="Google Plus" data-tippy-placement="top">
					<i class="icon-brand-google-plus-g"></i>
				</a>
			</li>
			<li>
				<a href="#" title="LinkedIn" data-tippy-placement="top">
					<i class="icon-brand-linkedin-in"></i>
				</a>
			</li>
		</ul>
		<div class="clearfix"></div>
	</div>
	<!-- Footer / End -->

</div>
@code {
	[CascadingParameter]
	private Task<AuthenticationState> authenticationStateTask { get; set; }


	string Username;
	UserProfile selUser; 
	protected override async Task OnInitializedAsync()
	{


		var user = (await authenticationStateTask).User;

		if (user.Identity.IsAuthenticated)
		{
			Username = user.Identity.Name;
			selUser = UserSvc.GetItemByEmail(Username);

		}

	}

	async Task LoadData()
	{
		selUser = UserSvc.GetItemByEmail(Username);
	}
	async Task RemoveFreelancer(BookmarkedFreelancer item)
	{
		var res = BookmarkedFreelancerSvc.DeleteData(item);
		if (res)
		{
			toastService.ShowSuccess("Berhasil di hapus");
			await LoadData();
		}
		else
		{
			toastService.ShowSuccess("Data tidak dapat dihapus, hubungi admin.");

		}
	}

	async Task RemoveJob(BookmarkedJob item)
	{
		var res = BookmarkedJobSvc.DeleteData(item);
		if (res)
		{
			toastService.ShowSuccess("Berhasil di hapus");
			await LoadData();
		}
		else
		{
			toastService.ShowSuccess("Data tidak dapat dihapus, hubungi admin.");

		}
	}
}
