@page "/project-detail"
@page "/project-detail/{ProjectId:long}"
@layout ContentLayoutBlack
@inject IJSRuntime IJS
@inject ProjectService	ProjectSvc
@inject ProjectBidderService ProjectBidderSvc
@inject UserProfileService	UserSvc
@inject BookmarkedProjectService BookmarkedProjectSvc
@inject NavigationManager NavMgr
@inject ToastInfoService Toast
<!-- Titlebar
================================================== -->
<div class="single-page-header" data-background-image="images/single-task.jpg">
	<div class="container">
		<div class="row">
			<div class="col-md-12">
				<div class="single-page-header-inner">
					<div class="left-side">
						<div class="header-image"><a href="@($"/company-detail/{DataProject.CompanyId}")"><img src="@(string.IsNullOrEmpty(DataProject.Company.LogoUrl)?"images/browse-companies-02.png":DataProject.Company.LogoUrl)" alt=""></a></div>
						<div class="header-details">
							<h3>@DataProject.ProjectName</h3>
							<h5>About the Employer</h5>
							<ul>
								<li><a href="@($"/company-detail/{DataProject.CompanyId}")"><i class="icon-material-outline-business"></i> @DataProject.Employer.FullName</a></li>
								<li><div class="star-rating" data-rating="@DataProject.Employer.Rating"></div></li>
								<li><img class="flag" src="@(string.IsNullOrEmpty(DataProject.Employer.Nationality)?"images/flags/id.svg":$"images/flags/{DataProject.Employer.Nationality}.svg")" alt=""> @DataProject.Location</li>
								<li>
									@if (DataProject.Company.IsVerified)
									{
										<div class="verified-badge-with-title">Verified</div>
									}
								</li>
							</ul>
						</div>
					</div>
					<div class="right-side">
						<div class="salary-box">
							<div class="salary-type">Project Budget</div>
							<div class="salary-amount">@($"Rp{NumberHelper.FormatNumber(DataProject.BudgetMin)} - Rp{NumberHelper.FormatNumber(DataProject.BudgetMax)}")</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>


<!-- Page Content
================================================== -->
<div class="container">
	<div class="row">

		<!-- Content -->
		<div class="col-xl-8 col-lg-8 content-right-offset">

			<!-- Description -->
			<div class="single-page-section">
				<h3 class="margin-bottom-25">Project Description</h3>
				<p>@DataProject.ProjectDesc</p>
			</div>

			<!-- Atachments -->
			<div class="single-page-section">
				<h3>Attachments</h3>
				<div class="attachments-container">
					@if (!string.IsNullOrEmpty(DataProject.AttachmentUrls))
					{
						var count = 1;
						foreach (var url in DataProject.AttachmentUrls?.Split(';'))
						{
							<a href="url" target="_blank" class="attachment-box ripple-effect"><span>Lampiran @(count++)</span><i>@Path.GetExtension(url).ToUpper()</i></a>
						}
					}
					
				</div>
			</div>

			<!-- Skills -->
			<div class="single-page-section">
				<h3>Skills Required</h3>
				<div class="task-tags">
					@if(!string.IsNullOrEmpty(DataProject.Skills))
					@foreach(var skill in DataProject.Skills.Split(';'))
					{
						<span>@skill</span>
					}				
				</div>
			</div>
			<div class="clearfix"></div>

			<!-- Freelancers Bidding -->
			<div class="boxed-list margin-bottom-60">
				<div class="boxed-list-headline">
					<h3><i class="icon-material-outline-group"></i> Freelancers Bidding</h3>
				</div>
				<ul class="boxed-list-ul">
					@if (DataProject.ProjectBidders != null)
						@foreach (var item in DataProject.ProjectBidders)
						{
							<li>
								<div class="bid">
									<!-- Avatar -->
									<div class="bids-avatar">
										<div class="freelancer-avatar">
											<div class="verified-badge"></div>
											<a href="@($"/freelance-detail/{item.UserBidderId}")"><img src="@(string.IsNullOrEmpty(item.UserBidder.PicUrl)?"images/user-avatar-big-01.jpg":item.UserBidder.PicUrl)" alt=""></a>
										</div>
									</div>

									<!-- Content -->
									<div class="bids-content">
										<!-- Name -->
										<div class="freelancer-name">
											<h4><a href="@($"/freelance-detail/{item.UserBidderId}")">@item.UserBidder.FullName <img class="flag" src="@(string.IsNullOrEmpty(item.UserBidder.Nationality)?"images/flags/id.svg":$"images/flags/{item.UserBidder.Nationality}.svg")" alt="" title="@item.UserBidder.Nationality" data-tippy-placement="top"></a></h4>
											<div class="star-rating" data-rating="@item.UserBidder.Rating"></div>
										</div>
									</div>

									<!-- Bid -->
									<div class="bids-bid">
										<div class="bid-rate">
											<div class="rate">Rp @item.OfferingPrice.ToString("n0")</div>
											<span>dalam @(item.DeliveryTime.Days > 0 ? item.DeliveryTime.Days + " hari" : item.DeliveryTime.Hours + " jam")</span>
										</div>
									</div>
								</div>
							</li>
						}

				</ul>
			</div>

		</div>


		<!-- Sidebar -->
		<div class="col-xl-4 col-lg-4">
			<div class="sidebar-container">

				<div class="countdown green margin-bottom-35">@DateHelper.GetTimeLeft(DataProject.ExpiryDate)</div>

				<div class="sidebar-widget">
					<div class="bidding-widget">
						<div class="bidding-headline"><h3>Bid on this Project!</h3></div>
						<div class="bidding-inner">

							<!-- Headline -->
							<span class="bidding-detail">Set your <strong>minimal rate</strong></span>

							<!-- Price Slider -->
							<div class="bidding-value">Rp<span id="biddingVal"></span></div>
							<input class="bidding-slider" id="bid-slider" type="number" @bind="NewBid.OfferingPrice" data-slider-handle="custom" data-slider-currency="$" data-slider-min="10000" data-slider-max="100000000000" data-slider-value="auto" data-slider-step="50" data-slider-tooltip="hide" />

							<!-- Headline -->
							<span class="bidding-detail margin-top-30">Set your <strong>delivery time</strong></span>

							<!-- Fields -->
							<div class="bidding-fields">
								<div class="bidding-field">
									<!-- Quantity Buttons -->
									<div class="qtyButtons">
										<div class="qtyDec"></div>
										<input @bind="Duration" type="text" name="qtyInput" >
										<div class="qtyInc"></div>
									</div>
								</div>
								<div class="bidding-field">
									<select @bind="BidType" >
										<option value="Days" selected>Days</option>
										<option value="Hours">Hours</option>
									</select>
								</div>
							</div>

							<!-- Button -->
							<button id="snackbar-place-bid" @onclick="PlaceBid" class="button ripple-effect move-on-hover full-width margin-top-30"><span>Place a Bid</span></button>

						</div>
						   <AuthorizeView>
								<NotAuthorized>
								<div class="bidding-signup">Don't have an account? <a href="/sign-in" class="register-tab sign-in popup-with-zoom-anim">Sign Up</a></div>
								</NotAuthorized>
						   </AuthorizeView>
						
					</div>
				</div>

				<!-- Sidebar Widget -->
				<div class="sidebar-widget">
					<h3>Bookmark or Share</h3>

					<!-- Bookmark Button -->
					<button @onclick="ToggleBookmark" class="bookmark-button margin-bottom-25 @(BookMarked ? "bookmarked" : "")">
						<span class="bookmark-icon"></span>
						<span class="bookmark-text">Bookmark</span>
						<span class="bookmarked-text">Bookmarked</span>
					</button>

					<!-- Copy URL -->
					<div class="copy-url">
						<input id="copy-url" @bind="ThisUrl" type="text" class="with-border">
						<button @onclick="CopyToClip" class="copy-url-button ripple-effect" data-clipboard-target="#copy-url" title="Copy to Clipboard" data-tippy-placement="top"><i class="icon-material-outline-file-copy"></i></button>
					</div>

					<!-- Share Buttons -->
					<div class="share-buttons margin-top-25">
						<div class="share-buttons-trigger"><i class="icon-feather-share-2"></i></div>
						<div class="share-buttons-content">
							<span>Interesting? <strong>Share It!</strong></span>
							<ul class="share-buttons-icons">
								<li><a href="#" data-button-color="#3b5998" title="Share on Facebook" data-tippy-placement="top"><i class="icon-brand-facebook-f"></i></a></li>
								<li><a href="#" data-button-color="#1da1f2" title="Share on Twitter" data-tippy-placement="top"><i class="icon-brand-twitter"></i></a></li>
								<li><a href="#" data-button-color="#dd4b39" title="Share on Google Plus" data-tippy-placement="top"><i class="icon-brand-google-plus-g"></i></a></li>
								<li><a href="#" data-button-color="#0077b5" title="Share on LinkedIn" data-tippy-placement="top"><i class="icon-brand-linkedin-in"></i></a></li>
							</ul>
						</div>
					</div>
				</div>

			</div>
		</div>

	</div>
</div>


<!-- Spacer -->
<div class="margin-top-15"></div>
<!-- Spacer / End-->
@code {
	int Duration = 1;
	string BidType = "Days";
	ProjectBidder NewBid = new();
	bool BookMarked = false;
	string ThisUrl;
	List<Project> SimilarProjects = new();
	public Project DataProject { get; set; } = new();
	public UserProfile SelUser { get; set; } = new();
	[CascadingParameter]
	private Task<AuthenticationState> authenticationStateTask { get; set; }
	string UserName;
	[Parameter]
	public long ProjectId { get; set; }
	[CascadingParameter]
	public ContentLayoutBlack Layout { get; set; }
	bool HasBid = false;
	protected override async Task OnInitializedAsync()
	{

		var user = (await authenticationStateTask).User;

		if (user.Identity.IsAuthenticated)
		{
			UserName = user.Identity.Name;
			SelUser = UserSvc.GetItemByUsername(UserName);

		}
		if (ProjectId > 0)
		{
			DataProject = ProjectSvc.GetDataById(ProjectId);
			SimilarProjects = ProjectSvc.GetSimilar(DataProject);
			if (!string.IsNullOrEmpty(UserName))
				BookMarked = SelUser.BookmarkedProjects.Any(x => x.ProjectId == ProjectId && x.UserId == SelUser.Id);
		}
		ThisUrl = NavMgr.Uri;

	}

	async Task ToggleBookmark()
	{
		if (string.IsNullOrEmpty(UserName))
		{
			await Toast.ShowInfo("Login terlebih dahulu untuk lakukan bookmark");
			return;
		}
		BookMarked = !BookMarked;
		if (BookMarked)
			BookmarkedProjectSvc.Bookmark(SelUser.Id, DataProject.Id);
		else
			BookmarkedProjectSvc.UnBookmark(SelUser.Id, DataProject.Id);

	}

	async Task CopyToClip()
	{
		await IJS.InvokeVoidAsync("CopyToClipboard", "copy-url");
	}

	async Task PlaceBid()
	{
		if (HasBid)
		{
			await Toast.ShowInfo("Anda sudah mengirimkan penawaran untuk project ini.");
			return;
		}
		if (SelUser == null)
		{
			await Toast.ShowInfo("Silakan login terlebih dahulu.");
			//Layout.SetProjectItem(0, 0);
		}
		else
		{
			if (BidType == "Days")
			{
				NewBid.DeliveryTime = new TimeSpan(Duration,0,0,0);
			}
			else
			{
				NewBid.DeliveryTime = new TimeSpan(Duration,0, 0);
			}
			NewBid.UserBidderId = SelUser.Id;
			NewBid.ProjectId = DataProject.Id;
			NewBid.BidDate=DateHelper.GetLocalTimeNow();
			NewBid.IsApproved=false;
			NewBid.OfferingPrice = await IJS.InvokeAsync<double>("GetValue","bid-slider");
			var res = ProjectBidderSvc.InsertData(NewBid);
			if (res)
			{
				HasBid = true;
				await Toast.ShowInfo("Penawaran sudah terkirim.");
			}
			//Layout.SetProjectItem(SelUser.Id, DataProject.Id);
		}
	}
	protected override void OnAfterRender(bool firstRender)
	{
		/*
		if (firstRender)
		{
			IJS.InvokeVoidAsync("LoadMap");
		}*/
	}
}
