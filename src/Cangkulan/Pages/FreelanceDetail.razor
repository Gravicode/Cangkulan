@page "/freelance-detail"
@page "/freelance-detail/{FreelancerId:long}"

@layout ContentLayoutBlack

@inject IJSRuntime IJS
@inject UserProfileService	UserSvc
@inject BookmarkedFreelancerService BookmarkedFreelancerSvc
@inject NavigationManager NavMgr
@inject ToastInfoService Toast
<!-- Titlebar
<!-- Titlebar
================================================== -->
<div class="single-page-header freelancer-header" data-background-image="images/single-freelancer.jpg">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="single-page-header-inner">
                    <div class="left-side">
                        <div class="header-image freelancer-avatar"><img src="@(string.IsNullOrEmpty(DataFreelancer.PicUrl)?"images/user-avatar-big-02.jpg":DataFreelancer.PicUrl)" alt=""></div>
                        <div class="header-details">
                            <h3>@DataFreelancer.FullName <span>@DataFreelancer.TagLine</span></h3>
                            <ul>
                                <li><div class="star-rating" data-rating="@DataFreelancer.Rating"></div></li>
                                <li><img class="flag" src="@(string.IsNullOrEmpty(DataFreelancer.Nationality)?"images/flags/id.svg":$"images/flags/{DataFreelancer.Nationality}.svg")" alt=""> @DataFreelancer.Nationality</li>
                                <li>
                                    @if (DataFreelancer.Verified)
                                    {
                                        <div class="verified-badge-with-title">Verified</div>
                                    }
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<!-- Page Content
================================================== -->
<div class="container">
    <div class="row">

        <!-- Content -->
        <div class="col-xl-8 col-lg-8 content-right-offset">

            <!-- Page Content -->
            <div class="single-page-section">
                <h3 class="margin-bottom-25">Tentang Freelancer</h3>
                <p>@DataFreelancer.AboutMe</p>
            </div>

            <!-- Boxed List -->
            <div class="boxed-list margin-bottom-60">
                <div class="boxed-list-headline">
                    <h3><i class="icon-material-outline-thumb-up"></i> Jejak Karir and Review</h3>
                </div>
                <ul class="boxed-list-ul">
                    @if(DataFreelancer.ReviewByEmployers!=null)
                    @foreach (var item in DataFreelancer.ReviewByEmployers)
                    {
                        <li>
                            <div class="boxed-list-item">
                                <!-- Content -->
                                <div class="item-content">
                                    <h4>@item.Project.ProjectName <span>Rating sebagai Freelancer</span></h4>
                                    <div class="item-details margin-top-10">
                                        <div class="star-rating" data-rating="@item.Rating"></div>
                                        <div class="detail-item"><i class="icon-material-outline-date-range"></i> @item.CreatedDate.ToString("MMMM yyyy")</div>
                                    </div>
                                    <div class="item-description">
                                        <p>@item.Message </p>
                                    </div>
                                </div>
                            </div>
                        </li>
                    }
                </ul>

                <!-- Pagination -->
                <div class="clearfix"></div>
                <div style="display:none;" class="pagination-container margin-top-40 margin-bottom-10">
                    <nav class="pagination">
                        <ul>
                            <li><a href="#" class="ripple-effect current-page">1</a></li>
                            <li><a href="#" class="ripple-effect">2</a></li>
                            <li class="pagination-arrow"><a href="#" class="ripple-effect"><i class="icon-material-outline-keyboard-arrow-right"></i></a></li>
                        </ul>
                    </nav>
                </div>
                <div class="clearfix"></div>
                <!-- Pagination / End -->

            </div>
            <!-- Boxed List / End -->
            <!-- Boxed List -->
            <div class="boxed-list margin-bottom-60">
                <div class="boxed-list-headline">
                    <h3><i class="icon-material-outline-business"></i> Jejak Karir</h3>
                </div>
                <ul class="boxed-list-ul">
                    @if (DataFreelancer.EmploymentHistories != null)
                        @foreach (var item in DataFreelancer.EmploymentHistories)
                        {
                            <li>
                                <div class="boxed-list-item">
                                    <!-- Avatar -->
                                    <div class="item-image">
                                        <img src="@(string.IsNullOrEmpty(item.CompanyPicUrl)?"images/browse-companies-03.png":item.CompanyPicUrl)" alt="">
                                    </div>

                                    <!-- Content -->
                                    <div class="item-content">
                                        <h4>@item.JobTitle</h4>
                                        <div class="item-details margin-top-7">
                                            <div class="detail-item"><a href="#"><i class="icon-material-outline-business"></i> @item.CompanyName</a></div>
                                            <div class="detail-item"><i class="icon-material-outline-date-range"></i> @item.StartDate?.ToString("MMMM yyyy") - @item.EndDate?.ToString("MMMM yyyy")</div>
                                        </div>
                                        <div class="item-description">
                                            <p>@item.Description</p>
                                        </div>
                                    </div>
                                </div>
                            </li>
                        }
                </ul>
            </div>
            <!-- Boxed List / End -->

        </div>


        <!-- Sidebar -->
        <div class="col-xl-4 col-lg-4">
            <div class="sidebar-container">

                <!-- Profile Overview -->
                <div class="profile-overview">
                    <div class="overview-item"><strong>Rp @DataFreelancer.RatePerHour?.ToString("n0")</strong><span>Rate per Jam</span></div>
                    <div class="overview-item"><strong>@DataFreelancer.ProjectBids.Where(x => x.Project.WinnerId == DataFreelancer.Id).Count()</strong><span>Jobs Done</span></div>
                    <div class="overview-item"><strong>@DataFreelancer.ReviewByEmployers.Count()</strong><span>Review</span></div>
                </div>

                <!-- Button -->
                <a href="#" @onclick="SendOffer" @onclick:preventDefault class="apply-now-button popup-with-zoom-anim margin-bottom-50">Kirim Penawaran <i class="icon-material-outline-arrow-right-alt"></i></a>

                <!-- Freelancer Indicators -->
                <div class="sidebar-widget">
                    <div class="freelancer-indicators">
                        @{
                            var ProjectSuccess = DataFreelancer.ProjectBids == null ? 0 : (float)DataFreelancer.ProjectBids.Count() / DataFreelancer.ProjectBids.Where(x => x.Project.WinnerId == DataFreelancer.Id).Count() * 100;
                            var Recommendation = DataFreelancer.ProjectBids == null ? 0 : (float)DataFreelancer.ReviewByEmployers.Where(x => x.Rating > 3).Count() / DataFreelancer.ReviewByEmployers.Count() * 100;
                            var OnTime = DataFreelancer.ProjectBids == null ? 0 : (float)DataFreelancer.ReviewByEmployers.Where(x => x.OnTime).Count() / DataFreelancer.ReviewByEmployers.Count() * 100;
                            var OnBudget = DataFreelancer.ProjectBids == null ? 0 : (float)DataFreelancer.ReviewByEmployers.Where(x => x.OnBudget).Count() / DataFreelancer.ReviewByEmployers.Count() * 100;
                            }
                        <!-- Indicator -->
                        <div class="indicator">
                            <strong>@ProjectSuccess.ToString("n0") %</strong>
                            <div class="indicator-bar" data-indicator-percentage="@ProjectSuccess"><span></span></div>
                            <span>Proyek Sukses</span>
                        </div>

                        <!-- Indicator -->
                        <div class="indicator">
                            <strong>@Recommendation.ToString("n0") %</strong>
                            <div class="indicator-bar" data-indicator-percentage="@Recommendation"><span></span></div>
                            <span>Recommendation</span>
                        </div>

                        <!-- Indicator -->
                        <div class="indicator">
                            <strong>@OnTime.ToString("n0") %</strong>
                            <div class="indicator-bar" data-indicator-percentage="@OnTime"><span></span></div>
                            <span>On Time</span>
                        </div>

                        <!-- Indicator -->
                        <div class="indicator">
                            <strong>@OnBudget %</strong>
                            <div class="indicator-bar" data-indicator-percentage="@OnBudget"><span></span></div>
                            <span>On Budget</span>
                        </div>
                    </div>
                </div>

                <!-- Widget -->
                <div class="sidebar-widget">
                    <h3>Social Profiles</h3>
                    <div class="freelancer-socials margin-top-25">
                        <ul>
                            <li><a href="@($"linkedin.com/{DataFreelancer.LinkedIdUrl}")" title="Linkedid" data-tippy-placement="top"><i class="icon-brand-linkedin"></i></a></li>
                            <li><a href="@($"twitter.com/{DataFreelancer.TwitterUrl}")" title="Twitter" data-tippy-placement="top"><i class="icon-brand-twitter"></i></a></li>
                            <li><a href="@($"facebook.com/{DataFreelancer.FBUrl}")" title="Facebook" data-tippy-placement="top"><i class="icon-brand-facebook"></i></a></li>
                            <li><a href="@($"github.com/{DataFreelancer.GithubUrl}")" title="GitHub" data-tippy-placement="top"><i class="icon-brand-github"></i></a></li>

                        </ul>
                    </div>
                </div>

                <!-- Widget -->
                <div class="sidebar-widget">
                    <h3>Skills</h3>
                    <div class="task-tags">
                        @if (!string.IsNullOrEmpty(DataFreelancer.Skill))
                            @foreach (var skill in DataFreelancer.Skill.Split(';'))
                            {
                                <span>@skill</span>
                            }
                    </div>
                </div>

                <!-- Widget -->
                <div class="sidebar-widget">
                    <h3>Attachments</h3>
                    <div class="attachments-container">
                        @if (DataFreelancer.Attachments != null)
                            @foreach (var lampiran in DataFreelancer.Attachments)
                            {
                                <a href="@lampiran.LinkUrl" class="attachment-box ripple-effect"><span>@lampiran.Title</span><i>@lampiran.Extension.ToUpper()</i></a>
                            }
                    </div>
                </div>

                <!-- Sidebar Widget -->
                <div class="sidebar-widget">
                    <h3>Bookmark or Share</h3>

                    <!-- Bookmark Button -->
                    <button @onclick="ToggleBookmark" class="bookmark-button margin-bottom-25 @(BookMarked ? "bookmarked" : "")">
                        <span class="bookmark-icon"></span>
                        <span class="bookmark-text">Bookmark</span>
                        <span class="bookmarked-text">Bookmarked</span>
                    </button>

                    <!-- Copy URL -->
                    <div class="copy-url">
                        <input id="copy-url" @bind="ThisUrl" type="text"  class="with-border">
                        <button @onclick="CopyToClip" class="copy-url-button ripple-effect" data-clipboard-target="#copy-url" title="Copy to Clipboard" data-tippy-placement="top"><i class="icon-material-outline-file-copy"></i></button>
                    </div>

                    <!-- Share Buttons -->
                    <div class="share-buttons margin-top-25">
                        <div class="share-buttons-trigger"><i class="icon-feather-share-2"></i></div>
                        <div class="share-buttons-content">
                            <span>Interesting? <strong>Share It!</strong></span>
                            <ul class="share-buttons-icons">
                                <li><a href="#" data-button-color="#3b5998" title="Share on Facebook" data-tippy-placement="top"><i class="icon-brand-facebook-f"></i></a></li>
                                <li><a href="#" data-button-color="#1da1f2" title="Share on Twitter" data-tippy-placement="top"><i class="icon-brand-twitter"></i></a></li>
                                <li><a href="#" data-button-color="#dd4b39" title="Share on Google Plus" data-tippy-placement="top"><i class="icon-brand-google-plus-g"></i></a></li>
                                <li><a href="#" data-button-color="#0077b5" title="Share on LinkedIn" data-tippy-placement="top"><i class="icon-brand-linkedin-in"></i></a></li>
                            </ul>
                        </div>
                    </div>
                </div>

            </div>
        </div>

    </div>
</div>


<!-- Spacer -->
<div class="margin-top-15"></div>
<!-- Spacer / End-->
@code {
    [Parameter]
    public long FreelancerId { get; set; }
    bool BookMarked = false;
    string ThisUrl;
    public UserProfile SelUser { get; set; } = new();
    public UserProfile DataFreelancer { get; set; } = new();

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    string UserName;


    [CascadingParameter]
    public ContentLayoutBlack Layout { get; set; }

    protected override async Task OnInitializedAsync()
    {

        var user = (await authenticationStateTask).User;

        if (user.Identity.IsAuthenticated)
        {
            UserName = user.Identity.Name;
            SelUser = UserSvc.GetItemByUsername(UserName);


        }
        DataFreelancer = UserSvc.GetDataById(FreelancerId);
        if (!string.IsNullOrEmpty(UserName))
        {

            if (!string.IsNullOrEmpty(UserName))
                BookMarked = SelUser.BookmarkedFreelancers.Any(x => x.FreelancerId == FreelancerId && x.UserId == SelUser.Id);
        }
        ThisUrl = NavMgr.Uri;

    }

    async Task ToggleBookmark()
    {
        if (string.IsNullOrEmpty(UserName))
        {
            await Toast.ShowInfo("Login terlebih dahulu untuk lakukan bookmark");
            return;
        }
        BookMarked = !BookMarked;
        if (BookMarked)
            BookmarkedFreelancerSvc.Bookmark(SelUser.Id, DataFreelancer.Id);
        else
            BookmarkedFreelancerSvc.UnBookmark(SelUser.Id, DataFreelancer.Id);

    }

    async Task CopyToClip()
    {
        await IJS.InvokeVoidAsync("CopyToClipboard", "copy-url");
    }

    async Task SendMessage()
    {

    }
    protected override void OnAfterRender(bool firstRender)
    {

        if (firstRender)
        {
            //IJS.InvokeVoidAsync("LoadMap");
        }
    }

    async Task SendOffer()
    {
        var offer = new OfferCls();
        offer.ToEmail = DataFreelancer.Email;
        offer.ToName = DataFreelancer.FullName;
        Layout?.SetOfferItem(offer);
        await IJS.InvokeVoidAsync("ShowModal", "offer-small-dialog");
    }
}
