@page "/job-detail"
@page "/job-detail/{JobId:long}"
@layout ContentLayoutBlack
@inject IJSRuntime IJS
@inject JobService	JobSvc
@inject UserProfileService	UserSvc
@inject BookmarkedJobService BookmarkedJobSvc
@inject NavigationManager NavMgr
@inject ToastInfoService Toast
<!-- Titlebar
================================================== -->
<div class="single-page-header" data-background-image="images/single-job.jpg">
	<div class="container">
		<div class="row">
			<div class="col-md-12">
				<div class="single-page-header-inner">
					<div class="left-side">
						<div class="header-image"><a href="@($"/company-detail/{DataJob.CompanyId}")"><img src="@(string.IsNullOrEmpty(DataJob.Company.LogoUrl)?"images/company-logo-03a.png":DataJob.Company.LogoUrl)" alt=""></a></div>
						<div class="header-details">
							<h3>@DataJob.JobTitle</h3>
							<h5>About the Employer</h5>
							<ul>
								<li><a href="@($"/company-detail/{DataJob.CompanyId}")"><i class="icon-material-outline-business"></i> @DataJob.Employer.FullName</a></li>
								<li>
									<RatingPicker Rating="@DataJob.Employer.Rating"></RatingPicker>
								</li>
								<li><img class="flag" src="@(string.IsNullOrEmpty(DataJob.Employer.Nationality)?"images/flags/id.svg":$"images/flags/{DataJob.Employer.Nationality}.svg")" alt=""> @DataJob.Location</li>
								<li>@if (DataJob.Company.IsVerified)
									{
										<div class="verified-badge-with-title">Verified</div>
									}
								</li>
							</ul>
						</div>
					</div>
					<div class="right-side">
						<div class="salary-box">
							<div class="salary-type">Salary</div>
							<div class="salary-amount">@($"Rp{NumberHelper.FormatNumber(DataJob.SalaryMin)} - Rp{NumberHelper.FormatNumber(DataJob.SalaryMax)}")</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>


<!-- Page Content
================================================== -->
<div class="container">
	<div class="row">

		<!-- Content -->
		<div class="col-xl-8 col-lg-8 content-right-offset">

			<div class="single-page-section">
				<h3 class="margin-bottom-25">Job Description</h3>
				<p>@DataJob.JobDesc</p>
			</div>

			<div class="single-page-section">
				<h3 class="margin-bottom-30">Location</h3>
				<div id="single-job-map-container">
					<div id="singleListingMap" data-latitude="@DataJob.Latitude" data-longitude="@DataJob.Longitude" data-map-icon="im im-icon-Hamburger"></div>
					<a href="#" id="streetView">Street View</a>
				</div>
			</div>

			<div class="single-page-section">
				<h3 class="margin-bottom-25">Similar Jobs</h3>

				<!-- Listings Container -->
				<div class="listings-container grid-layout">
					@foreach(var item in SimilarJobs){
					<!-- Job Listing -->
					<a href="#" class="job-listing">

						<!-- Job Listing Details -->
						<div class="job-listing-details">
							<!-- Logo -->
							<div class="job-listing-company-logo">
								<img src="@(string.IsNullOrEmpty(item.Company.LogoUrl)?"images/company-logo-02.png":item.Company.LogoUrl)" alt="">
							</div>

							<!-- Details -->
							<div class="job-listing-description">
								<h4 class="job-listing-company">@item.Company.FullName</h4>
								<h3 class="job-listing-title">@item.JobTitle</h3>
							</div>
						</div>

						<!-- Job Listing Footer -->
						<div class="job-listing-footer">
							<ul>
								<li><i class="icon-material-outline-location-on"></i> @item.Location</li>
								<li><i class="icon-material-outline-business-center"></i> @item.JobType</li>
									<li><i class="icon-material-outline-account-balance-wallet"></i> @($"Rp{NumberHelper.FormatNumber(item.SalaryMin)}-Rp{NumberHelper.FormatNumber(item.SalaryMax)}")</li>
								<li><i class="icon-material-outline-access-time"></i> @DateHelper.GetElapsedTime(item.CreatedDate)</li>
							</ul>
						</div>
					</a>
					}
					
				</div>
				<!-- Listings Container / End -->

			</div>
		</div>


		<!-- Sidebar -->
		<div class="col-xl-4 col-lg-4">
			<div class="sidebar-container">

				<a href="#small-dialog" @onclick="ApplyJob" class="apply-now-button popup-with-zoom-anim">Apply Now <i class="icon-material-outline-arrow-right-alt"></i></a>

				<!-- Sidebar Widget -->
				<div class="sidebar-widget">
					<div class="job-overview">
						<div class="job-overview-headline">Job Summary</div>
						<div class="job-overview-inner">
							<ul>
								<li>
									<i class="icon-material-outline-location-on"></i>
									<span>Location</span>
									<h5>@DataJob.Location</h5>
								</li>
								<li>
									<i class="icon-material-outline-business-center"></i>
									<span>Job Type</span>
									<h5>@DataJob.JobType</h5>
								</li>
								<li>
									<i class="icon-material-outline-local-atm"></i>
									<span>Salary</span>
									<h5>@($"Rp{NumberHelper.FormatNumber(DataJob.SalaryMin)} - Rp{NumberHelper.FormatNumber(DataJob.SalaryMax)}")</h5>
								</li>
								<li>
									<i class="icon-material-outline-access-time"></i>
									<span>Date Posted</span>
									<h5>@DateHelper.GetElapsedTime(DataJob.CreatedDate)</h5>
								</li>
							</ul>
						</div>
					</div>
				</div>

				<!-- Sidebar Widget -->
				<div class="sidebar-widget">
					<h3>Bookmark or Share</h3>

					<!-- Bookmark Button -->
					<button @onclick="ToggleBookmark" class="bookmark-button margin-bottom-25 @(BookMarked ? "bookmarked" : "")">
						<span class="bookmark-icon"></span>
						<span class="bookmark-text">Bookmark</span>
						<span class="bookmarked-text">Bookmarked</span>
					</button>

					<!-- Copy URL -->
					<div class="copy-url">
						<input id="copy-url" type="text" @bind="ThisUrl" class="with-border">
						<button @onclick="CopyToClip" class="copy-url-button ripple-effect" data-clipboard-target="#copy-url" title="Copy to Clipboard" data-tippy-placement="top"><i class="icon-material-outline-file-copy"></i></button>
					</div>

					<!-- Share Buttons -->
					<div class="share-buttons margin-top-25">
						<div class="share-buttons-trigger"><i class="icon-feather-share-2"></i></div>
						<div class="share-buttons-content">
							<span>Interesting? <strong>Share It!</strong></span>
							<ul class="share-buttons-icons">
								<li><a href="#" data-button-color="#3b5998" title="Share on Facebook" data-tippy-placement="top"><i class="icon-brand-facebook-f"></i></a></li>
								<li><a href="#" data-button-color="#1da1f2" title="Share on Twitter" data-tippy-placement="top"><i class="icon-brand-twitter"></i></a></li>
								<li><a href="#" data-button-color="#dd4b39" title="Share on Google Plus" data-tippy-placement="top"><i class="icon-brand-google-plus-g"></i></a></li>
								<li><a href="#" data-button-color="#0077b5" title="Share on LinkedIn" data-tippy-placement="top"><i class="icon-brand-linkedin-in"></i></a></li>
							</ul>
						</div>
					</div>
				</div>

			</div>
		</div>

	</div>
</div>

@code {
	bool BookMarked = false;
	string ThisUrl;
	List<Job> SimilarJobs = new();
	public Job DataJob { get; set; } = new();
	public UserProfile SelUser { get; set; } = new();
	[CascadingParameter]
	private Task<AuthenticationState> authenticationStateTask { get; set; }
	string UserName;
	[Parameter]
	public long JobId { get; set; }
	[CascadingParameter]
	public ContentLayoutBlack Layout { get; set; }
	protected override async Task OnInitializedAsync()
	{

		var user = (await authenticationStateTask).User;

		if (user.Identity.IsAuthenticated)
		{
			UserName = user.Identity.Name;
			SelUser = UserSvc.GetItemByUsername(UserName);

		}
		if (JobId > 0)
		{
			DataJob = JobSvc.GetDataById(JobId);			
			SimilarJobs = JobSvc.GetSimilar(DataJob);
			if (!string.IsNullOrEmpty(UserName ))
				BookMarked = SelUser.BookmarkedJobs.Any(x => x.JobId == JobId && x.UserId == SelUser.Id);
		}
		ThisUrl = NavMgr.Uri;

	}

	async Task ToggleBookmark()
	{
		if (string.IsNullOrEmpty(UserName))
		{
			await Toast.ShowInfo("Login terlebih dahulu untuk lakukan bookmark");
			return;
		}
		BookMarked = !BookMarked;
		if (BookMarked)
			BookmarkedJobSvc.Bookmark(SelUser.Id, DataJob.Id);
		else
			BookmarkedJobSvc.UnBookmark(SelUser.Id, DataJob.Id);

	}

	async Task CopyToClip()
	{
		await IJS.InvokeVoidAsync("CopyToClipboard", "copy-url");
	}

	async Task ApplyJob()
	{
		if (SelUser == null)
		{
			await Toast.ShowInfo("Silakan login terlebih dahulu.");
			Layout.SetJobItem(0,0);
		}
		else
		{
			
			Layout.SetJobItem(SelUser.Id, DataJob.Id);
		}
	}
	protected override void OnAfterRender(bool firstRender)
	{

		if (firstRender)
		{
			IJS.InvokeVoidAsync("LoadMap");
		}
	}
}
