@page "/company-detail"
@page "/company-detail/{CompanyId:long}"

@layout ContentLayoutBlack
@inject IJSRuntime IJS
@inject CompanyService	CompanySvc
@inject BookmarkedJobService	BookmarkedJobSvc

@inject UserProfileService	UserSvc
@inject BookmarkedCompanyService BookmarkedCompanySvc
@inject NavigationManager NavMgr
@inject ToastInfoService Toast
@inject AppState AppState
<!-- Titlebar
================================================== -->
<div class="single-page-header" data-background-image="images/single-company.jpg">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="single-page-header-inner">
                    <div class="left-side">
                        <div class="header-image"><img src="@(string.IsNullOrEmpty(DataCompany.LogoUrl)?"images/browse-companies-03.png":DataCompany.LogoUrl)" alt=""></div>
                        <div class="header-details">
                            <h3>@DataCompany.FullName <span>@DataCompany.Category</span></h3>
                            <ul>
                                <li><RatingPicker Rating="DataCompany.Rating" IsEditable="false"></RatingPicker></li>
                                <li><img class="flag" src="@(string.IsNullOrEmpty(DataCompany.User.Nationality)?"images/flags/id.svg":$"images/flags/{DataCompany.User.Nationality}.svg")" alt=""> @DataCompany.User.Nationality</li>
                                <li>
                                    @if (DataCompany.IsVerified)
                                    {
                                        <div class="verified-badge-with-title">Verified</div>
                                    }
                                </li>
                            </ul>
                        </div>
                    </div>
                    <div class="right-side">
                        <!-- Breadcrumbs -->
                        <nav id="breadcrumbs" class="white">
                            <ul>
                                <li><a href="/">Home</a></li>
                                <li><a href="/browse-company">Browse Companies</a></li>
                                <li>@DataCompany.FullName</li>
                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<!-- Page Content
================================================== -->
<div class="container">
    <div class="row">

        <!-- Content -->
        <div class="col-xl-8 col-lg-8 content-right-offset">

            <div class="single-page-section">
                <h3 class="margin-bottom-25">Tentang Perusahaan</h3>
                <p>@DataCompany.About</p>
            </div>

            <!-- Boxed List -->
            <div class="boxed-list margin-bottom-60">
                <div class="boxed-list-headline">
                    <h3><i class="icon-material-outline-business-center"></i> Lowongan Kerja</h3>
                </div>

                <div class="listings-container compact-list-layout">
                    @foreach (var item in DataCompany.Jobs)
                    {
                        <!-- Company Listing -->
                        <a href="@($"/detail-job/{item.Id}")" class="job-listing">

                            <!-- Company Listing Details -->
                            <div class="job-listing-details">

                                <!-- Details -->
                                <div class="job-listing-description">
                                    <h3 class="job-listing-title">@item.JobTitle</h3>

                                    <!-- Company Listing Footer -->
                                    <div class="job-listing-footer">
                                        <ul>
                                            <li><i class="icon-material-outline-location-on"></i> @item.Location</li>
                                            <li><i class="icon-material-outline-business-center"></i> @item.JobType</li>
                                            <li><i class="icon-material-outline-access-time"></i> @DateHelper.GetElapsedTime(item.CreatedDate)</li>
                                        </ul>
                                    </div>
                                </div>

                            </div>

                            <!-- Bookmark -->
                            <span @onclick="()=>ToggleBookmarkJob(item.Id)" @onclick:preventDefault class="bookmark-icon @((JobBookmark.ContainsKey(item.Id) && JobBookmark[item.Id])  ? "bookmarked" : "")"></span>
                        </a>
                    }
                </div>

            </div>
            <!-- Boxed List / End -->
            <!-- Boxed List -->
            <div class="boxed-list margin-bottom-60">
                <div class="boxed-list-headline">
                    <h3><i class="icon-material-outline-thumb-up"></i> Review</h3>
                </div>
                <ul class="boxed-list-ul">
                    @foreach (var item in DataCompany.Reviews)
                    {
                        <li>
                            <div class="boxed-list-item">
                                <!-- Content -->
                                <div class="item-content">
                                    <h4>@item.Title <span>@item.Fullname</span></h4>
                                    <div class="item-details margin-top-10">
                                        <RatingPicker Rating="item.Rating" IsEditable="false"></RatingPicker>
                                        <div class="detail-item"><i class="icon-material-outline-date-range"></i> @item.CreatedDate.ToString("MMMM yyyy")</div>
                                    </div>
                                    <div class="item-description">
                                        <p>@item.Message</p>
                                    </div>
                                </div>
                            </div>
                        </li>
                    }
                </ul>

                <div class="centered-button margin-top-35">
                    <a href="#" @onclick:preventDefault @onclick="AddReview" class="popup-with-zoom-anim button button-sliding-icon">Kasih Review <i class="icon-material-outline-arrow-right-alt"></i></a>
                </div>

            </div>
            <!-- Boxed List / End -->

        </div>


        <!-- Sidebar -->
        <div class="col-xl-4 col-lg-4">
            <div class="sidebar-container">

                <!-- Location -->
                <div class="sidebar-widget">
                    <h3>Location</h3>
                    <div id="single-job-map-container">
                        <div id="singleListingMap" data-latitude="@DataCompany.Latitude" data-longitude="@DataCompany.Longitude" data-map-icon="im im-icon-Hamburger"></div>
                        <a href="#" id="streetView">Street View</a>
                    </div>
                </div>

                <!-- Widget -->
                <div class="sidebar-widget">
                    <h3>Social Profiles</h3>
                    <div class="freelancer-socials margin-top-25">
                        <ul>
                            <li><a href="@($"facebook.com/{DataCompany.FBLink}")" title="Dribbble" data-
                                ="top"><i class="icon-brand-dribbble"></i></a></li>
                            <li><a href="@($"twitter.com/{DataCompany.TwitterLink}")" title="Twitter" data-tippy-placement="top"><i class="icon-brand-twitter"></i></a></li>
                            <li><a href="@($"github.com/{DataCompany.GithubLink}")" title="GitHub" data-tippy-placement="top"><i class="icon-brand-github"></i></a></li>

                        </ul>
                    </div>
                </div>

                <!-- Sidebar Widget -->
                <div class="sidebar-widget">
                    <h3>Bookmark or Share</h3>

                    <!-- Bookmark Button -->
                    <button @onclick="ToggleBookmark" class="bookmark-button margin-bottom-25 @(BookMarked ? "bookmarked" : "")">
                        <span class="bookmark-icon"></span>
                        <span class="bookmark-text">Bookmark</span>
                        <span class="bookmarked-text">Bookmarked</span>
                    </button>

                    <!-- Copy URL -->
                    <div class="copy-url">
                        <input id="copy-url" type="text" @bind="ThisUrl" class="with-border">
                        <button class="copy-url-button ripple-effect" @onclick="CopyToClip" data-clipboard-target="#copy-url" title="Copy to Clipboard" data-tippy-placement="top"><i class="icon-material-outline-file-copy"></i></button>
                    </div>

                    <!-- Share Buttons -->
                    <div class="share-buttons margin-top-25">
                        <div class="share-buttons-trigger"><i class="icon-feather-share-2"></i></div>
                        <div class="share-buttons-content">
                            <span>Interesting? <strong>Share It!</strong></span>
                            <ul class="share-buttons-icons">
                                <li><a href="#" data-button-color="#3b5998" title="Share on Facebook" data-tippy-placement="top"><i class="icon-brand-facebook-f"></i></a></li>
                                <li><a href="#" data-button-color="#1da1f2" title="Share on Twitter" data-tippy-placement="top"><i class="icon-brand-twitter"></i></a></li>
                                <li><a href="#" data-button-color="#dd4b39" title="Share on Google Plus" data-tippy-placement="top"><i class="icon-brand-google-plus-g"></i></a></li>
                                <li><a href="#" data-button-color="#0077b5" title="Share on LinkedIn" data-tippy-placement="top"><i class="icon-brand-linkedin-in"></i></a></li>
                            </ul>
                        </div>
                    </div>
                </div>

            </div>
        </div>

    </div>
</div>


<!-- Spacer -->
<div class="margin-top-15"></div>
<!-- Spacer / End-->
@code {
    Dictionary<long, bool> JobBookmark = new();
    bool BookMarked = false;
    string ThisUrl;
    List<Company> SimilarCompanys = new();
    public Company DataCompany { get; set; } = new();
    public UserProfile SelUser { get; set; } = new();
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    string UserName;
    [Parameter]
    public long CompanyId { get; set; }
    [CascadingParameter]
    public ContentLayoutBlack Layout { get; set; }
    protected override async Task OnInitializedAsync()
    {

        var user = (await authenticationStateTask).User;

        if (user.Identity.IsAuthenticated)
        {
            UserName = user.Identity.Name;
            SelUser = UserSvc.GetItemByUsername(UserName);

        }
        LoadData();
        ThisUrl = NavMgr.Uri;
        AppState.OnReviewCompanyChange += Refresh;
    }

    async Task ToggleBookmark()
    {
        if (string.IsNullOrEmpty(UserName))
        {
            await Toast.ShowInfo("Login terlebih dahulu untuk lakukan bookmark");
            return;
        }
        BookMarked = !BookMarked;
        if (BookMarked)
            BookmarkedCompanySvc.Bookmark(SelUser.Id, DataCompany.Id);
        else
            BookmarkedCompanySvc.UnBookmark(SelUser.Id, DataCompany.Id);

    }
    async Task ToggleBookmarkJob(long JobId)
    {
        if (string.IsNullOrEmpty(UserName))
        {
            await Toast.ShowInfo("Login terlebih dahulu untuk lakukan bookmark");
            return;
        }
        JobBookmark[JobId] = !JobBookmark[JobId];
        if (JobBookmark[JobId])
            BookmarkedJobSvc.Bookmark(SelUser.Id, JobId);
        else
            BookmarkedJobSvc.UnBookmark(SelUser.Id, JobId);

    }
    async Task CopyToClip()
    {
        await IJS.InvokeVoidAsync("CopyToClipboard", "copy-url");
    }

    async Task ApplyCompany()
    {
        /*
        if (SelUser == null)
        {
            await Toast.ShowInfo("Silakan login terlebih dahulu.");
            Layout.SetCompanyItem(0, 0);
        }
        else
        {

            Layout.SetCompanyItem(SelUser.Id, DataCompany.Id);
        }*/
    }
    async Task AddReview()
    {
        var NewReview = new ReviewCompany() { CreatedDate = DateHelper.GetLocalTimeNow(), CompanyId = DataCompany.Id, Fullname = !string.IsNullOrEmpty(UserName) ? SelUser.FullName : "" };
        Layout.SetReviewCompany(DataCompany, NewReview);
        await IJS.InvokeVoidAsync("ShowModal", "reviewcompany-small-dialog");

    }
    protected override void OnAfterRender(bool firstRender)
    {

        if (firstRender)
        {
            IJS.InvokeVoidAsync("LoadMap");
        }
    }
    public void Dispose()
    {
        AppState.OnReviewCompanyChange -= Refresh;


    }
    async void Refresh(string tousername)
    {
        LoadData();
        await InvokeAsync(StateHasChanged);
    }
    void LoadData()
    {
        if (CompanyId > 0)
        {
            DataCompany = CompanySvc.GetDataById(CompanyId);
            SimilarCompanys = CompanySvc.GetSimilar(DataCompany);
            if (!string.IsNullOrEmpty(UserName))
            {
                JobBookmark.Clear();
                BookMarked = SelUser.BookmarkedCompanys.Any(x => x.CompanyId == CompanyId && x.UserId == SelUser.Id);
                foreach (var job in DataCompany.Jobs)
                {
                    JobBookmark.Add(job.Id, SelUser.BookmarkedJobs.Any(x => x.JobId == job.Id));
                }
            }
        }
    }
}
